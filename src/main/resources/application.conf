include "kamon"

authorization-server {
  port = 8088
  ec-keys-identifiers = ""
  rsa-keys-identifiers = ""
  ec-keys-identifiers = ${?EC_KEYS_IDENTIFIERS}
  rsa-keys-identifiers = ${?RSA_KEYS_IDENTIFIERS}

  jwt-queue-url = ${JWT_QUEUE_URL}

  generated-jwt {
    issuer = ${GENERATED_JWT_ISSUER}
    m2m-audience = ${GENERATED_M2M_JWT_AUDIENCE}
    m2m-duration-seconds = ${GENERATED_M2M_JWT_DURATION_SECONDS}
  }

  client-assertion-audience = ${CLIENT_ASSERTION_JWT_AUDIENCE}

}

akka {
  stdout-loglevel = "OFF"
  loglevel = "DEBUG"
  use-slf4j = on
  coordinated-shutdown.run-by-actor-system-terminate = on
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.authorizationserver.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.authorizationserver.server.impl.LiveCheck"
      }
    }
  }
}

# performance-settings
akka.http.server.pipelining-limit = 32
akka.http.server.pipelining-limit = ${?AKKA_SERVER_PIPELINING_LIMIT}

akka.http.host-connection-pool {
  max-connections = 32
  max-connections = ${?AKKA_HOST_CONNECTION_POOL_MAX_CONNECTIONS}
  min-connections = 2
  min-connections = ${?AKKA_HOST_CONNECTION_POOL_MIN_CONNECTIONS}
  max-open-requests = 4096
  max-open-requests = ${?AKKA_HOST_CONNECTION_POOL_MAX_OPEN_REQUESTS}
}

futures-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
    fixed-pool-size = ${?BLOCKING_DISPATCHER_POOL_SIZE}
    # core-pool-size-min = 8
    # core-pool-size-factor = 2.0
    # core-pool-size-max = 64

    # max-pool-size-min = 8
    # max-pool-size-factor = 2.0
    # max-pool-size-max = 64
  }
  throughput = 1
  throughput = ${?BLOCKING_DISPATCHER_THROUGHPUT}
}
# end-performance-settings

services {
  authorization-management = ${AUTHORIZATION_MANAGEMENT_URL}
}

interop-commons {
  isInternetFacing = true

  vault {
    address = ${VAULT_ADDR}
    token = ${VAULT_TOKEN}
    signature-route = ${VAULT_SIGNATURE_ROUTE}
  }

  jwt {
    public-keys {
      urls = ${WELL_KNOWN_URLS}
    }

    internal-token {
      issuer = ${INTERNAL_JWT_ISSUER}
      subject = ${INTERNAL_JWT_SUBJECT}
      audience = ${INTERNAL_JWT_AUDIENCE}
      duration-seconds = ${INTERNAL_JWT_DURATION_SECONDS}
    }
  }
}